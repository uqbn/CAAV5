// COPYRIGHT Dassault Systemes 2024
//===================================================================
//
// CAAFunction.h
// Header definition of CAAFunction
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2024  Creation: Code generated by the CAA wizard  root
//===================================================================
#ifndef CAAFunction_H
#define CAAFunction_H

#ifdef _WINDOWS_SOURCE
#ifdef __CAAFunction
#define ExportedByCAAFunction __declspec(dllexport)
#else
#define ExportedByCAAFunction __declspec(dllimport)
#endif
#else
#define ExportedByCAAFunction
#endif

// GeometricObjects
#include <CATCGMContainerMngt.h>
#include <CATCrvLimits.h>
#include <CATCurve.h>
#include <CATGeoFactory.h>
#include <CATPoint.h>
#include <CATTransfoManager.h>

// GMModelInterfaces
#include <CATBody.h>
#include <CATVertex.h>
#include <CATWire.h>

// GMOperatorsInterfaces
#include <CATCGMCreateDistanceMinTopo.h>
#include <CATCGMCreateTopBoolean.h>
#include <CATICGMDistanceMinBodyBody.h>
#include <CATICGMDistancePointBody.h>
#include <CATICGMHybSplit.h>
#include <CATICGMTopWire.h>

// GSMInterfaces
#include <CATIGSMFactory.h>
#include <CATIGSMLineAngle.h>
#include <CATIGSMPointOnCurve.h>
#include <CATIGSMProceduralView.h>
#include <CATIGSMProject.h>

// InteractiveInterfaces
#include <CATIBuildPath.h>

// KnowledgeInterfaces
#include <CATICkeParm.h>
#include <CATICkeParmFactory.h>

// Mathematics
#include <CATMathLimits.h>
#include <CATMathPoint.h>
#include <CATMathTransformation.h>
#include <CATSoftwareConfiguration.h>

// MeasureGeometryInterfaces
#include <CATIMeasurableCurve.h>

// MecModInterfaces
#include <CATIGeometricalElement.h>
#include <CATIPrtContainer.h>
#include <CATIPrtPart.h>

// ObjectModelerBase
#include <CATDocument.h>
#include <CATIAlias.h>
#include <CATIContainer.h>
#include <CATILinkableObject.h>
#include <CATInit.h>

// ObjectSpecsModeler
#include <CATISpecObject.h>

// ProductStructure
#include <CATIProduct.h>

// VisualizationBase
#include <CATPathElement.h>
#include <CATPathElementAgent.h>

ExportedByCAAFunction CATDocument *CAAGetDocument(CATISpecObject_var iSpec);
ExportedByCAAFunction CATIContainer *CAAGetContainerOfDoc(CATDocument *pDocument);
ExportedByCAAFunction CATIPrtContainer *CAAGetPrtContainerOfDoc(CATDocument *pDocument);

ExportedByCAAFunction CATIGSMPointOnCurve_var CAAGSMCreatePointOnCurve(CATIGSMFactory_var iFactory,
    CATISpecObject_var iCurve, CATISpecObject_var iPoint, CATICkeParm_var iDistance,
    CATGSMOrientation iOrientation = CATGSMSameOrientation);

ExportedByCAAFunction HRESULT CAATryUpdate(CATISpecObject_var iSpec);
ExportedByCAAFunction HRESULT CAAGSMInsertInView(CATISpecObject_var iSpec, CATISpecObject_var iFather = NULL_var);

ExportedByCAAFunction HRESULT CAAGetAlias(CATISpecObject_var iSpec, CATUnicodeString &oName);
ExportedByCAAFunction CATUnicodeString CAAGetAlias(CATISpecObject_var iSpec);

ExportedByCAAFunction HRESULT CAAGetPointsOfCurve(CATISpecObject_var iSpec, CATMathPoint &ioStartPoint, CATMathPoint &ioEndPoint);
ExportedByCAAFunction HRESULT CAAGetPointsOfCurve(CATISpecObject_var iSpec, CATMathPoint &ioStartPoint, CATMathPoint &ioMidPoint, CATMathPoint &ioEndPoint);
ExportedByCAAFunction HRESULT CAAGetLengthOfCurve(CATISpecObject_var iSpec, double &oLength);
ExportedByCAAFunction double CAAGetLengthOfCurve(CATISpecObject_var iSpec);
ExportedByCAAFunction CATBoolean CAAIsCurve(CATISpecObject_var iSpec);

ExportedByCAAFunction CATBody_var CAASpecToBody(CATISpecObject_var iSpec);

ExportedByCAAFunction double CAADistancePointBody(CATTopData *iData, CATMathPoint const &iPoint, CATBody *iBody,
    CATDistanceSignMode iSignMode = CATDistanceSignModeDefault);
ExportedByCAAFunction double CAADistancePointBody(CATTopData *iData, CATMathPoint const &iPoint, CATBody *iBody,
    CATMathPoint &oPoint, CATDistanceSignMode iSignMode = CATDistanceSignModeDefault);
ExportedByCAAFunction double CAADistanceBodyBody(CATGeoFactory *iFactory, CATTopData *iData,
    CATBody *iBody1, CATBody *iBody2);
ExportedByCAAFunction double CAADistanceBodyBody(CATGeoFactory *iFactory, CATTopData *iData,
    CATBody *iBody1, CATBody *iBody2, CATMathPoint &oP1, CATMathPoint &oP2);

ExportedByCAAFunction CATBody *CAACreateTopSplitWire(CATGeoFactory *iFactory, CATTopData *iData, CATBody *iBodyToCut, CATBody *iCuttingBody,
    CATHybSelectionMode iSelectMode = POSITIVE_POSITIVE_SIDE);

ExportedByCAAFunction CATBody *CAACreateTopWire3(CATGeoFactory *iFactory, CATTopData *iData,
    CATMathPoint const &P1, CATMathPoint const &P2, CATMathPoint const &P3, CATMathPoint const &P4);

ExportedByCAAFunction void CAASaveCGM(CATUnicodeString iName, CATBody *iBody);

#include <iostream>
// clang-format off
#define IF_ERR(expr,exec) \
    if(expr){::std::cerr<<"ERROR: "<<__FILE__<<":"<<__LINE__<<" "<<__FUNCTION__<<": "<<#expr<<"\n";exec;}
#define IF_BUG(expr,exec) \
    if(expr){::std::cout<<"DEBUG: "<<__FILE__<<":"<<__LINE__<<" "<<__FUNCTION__<<": "<<#expr<<"\n";exec;}
#define IF_LOG(expr,info,exec) \
    if(expr){::std::cout<<info<<"\n";exec;}
// clang-format on

#endif /* CAAFunction.h */
